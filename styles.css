/*
Main Colors:

#3067A6
#0378A6
#D9A404
#BF7E04
#733702
/* 
:root { don't know how this works, its from bulb toggle switch codepen
minFontSize + (maxFontSize - minFontSize) * (100vw - minVWidth)/(maxVWidth - minVWidth)
	font-size: calc(64px + (80 - 64) * (100vw - 320px)/(960 - 320));/*100 vw is 1920 for my computer*/
/* } */

html {
  font-size: 62.5%; /*root font size is 16px, so this is 10px to use rem easier but accessiblity needs to be looked at because users can change their font size*/
}

*,
*::before,
*::after {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
  font-family: 'Recursive', sans-serif;
}

:root {
  --checkbox-width: 6rem;
  --checkbox-height: 3rem;
}

body {
  /* height: 100vh; */
  width: 100vw;
  display: flex;
  align-items: center;
  flex-direction: column;
  /* background: linear-gradient(to top left, #28b487, #1e201e); */
  background-color: #36454f;
}

/*---------------headers-------------*/

h1,
h2,
a {
  font-family: 'Recursive', sans-serif;
  color: white;
}

h1 {
  font-size: 5rem;
  width: 80%;
  padding: 3rem;
  margin: 10px 50px;
  text-align: center;
  /* background-color: #0378a6; */
  border-bottom: 1rem solid #d9a404;
}

h2 {
  font-size: 2.5rem;
}

p {
  font-size: 1.5rem;
}

/*-------------------nav menu---------------*/

nav {
  display: none;
  width: 100%;
  height: 6rem;
  background-color: #d9a404;
  /* border-bottom: 0.5rem solid white; */
  /* border-right: 1rem solid white ; */
  /* box-shadow: 5px 10px #888888; */
}

nav ul {
  display: flex;
  flex-direction: row;
  justify-content: space-evenly;
  height: 100%;
}

nav li {
  list-style: none;
  width: 10%;
  height: 80%;
  background-color: #0378a6;
  text-align: center;
  margin: auto 0;
  display: flex;
  flex-direction: column;
  justify-content: center;
}

nav a {
  text-decoration: none;
  font-size: 2rem;
}

/*---------------checkbox --------------------*/
/* 
input[type='checkbox'].inner_outer {
  font-size: 2rem;
  appearance: none;
  width: 3.5em;
  height: 1.5em;
  background: #ddd;
  border-radius: 3em;
  position: relative;
  cursor: pointer;
  outline: none;
  transition: all 0.2s ease-in-out;
}

input[type='checkbox'].inner_outer:checked {
  background: #0ebeff;
}

input[type='checkbox'].inner_outer:after {
  position: absolute;
  content: '';
  width: 1.5em;
  height: 1.5em;
  border-radius: 50%;
  background: #fff;
  box-shadow: 0 0 0.25em rgba(0, 0, 0, 0.3);
  transform: scale(0.7);
  left: 0;
  transition: all 0.2s ease-in-out;
}

input[type='checkbox'].inner_outer:checked:after {
  left: calc(100% - 1.5em); */
/* } */

/*---------------Buttons grid --------------------*/
.button_container {
  min-height: 25rem;
  width: 100vw;
  display: grid;
  /* grid-template-columns: repeat(7, auto);
  grid-template-rows: auto auto auto; */
  grid-template-areas:
    'options_1 options_1 options_1 options_spacer options_2 options_2 options_2' /*7 columns*/
    'header_ffso header_ffso header_ffso . header_rfso header_rfso header_rfso' /*7 columns*/
    'nozzle_option_ffso_1 nozzle_option_ffso_2 nozzle_option_ffso_3 . nozzle_option_rfso_1 nozzle_option_rfso_2 nozzle_option_rfso_3' /*7 columns*/
    'nozzle_option_ffso_4 nozzle_option_ffso_5 nozzle_option_ffso_6 . nozzle_option_rfso_4 nozzle_option_rfso_5 nozzle_option_rfso_6' /*7 columns*/
    'nozzle_option_ffso_7 nozzle_option_ffso_8 nozzle_option_ffso_9 . nozzle_option_rfso_7 nozzle_option_rfso_8 nozzle_option_rfso_9'; /*7 columns*/

  column-gap: 10px;
  row-gap: 10px;
  /* display: flex;
  flex-direction: row; */
  /* align-items:center; */
  justify-content: space-evenly;
  padding: 0px 100px;
}

/* .checkbox_container {
  grid-area: options;
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 30rem;
} */

/* .checkbox_container p:first-child {
  padding: 0 0.2rem;
} */

.heading_ffso {
  grid-area: header_ffso;
  justify-self: center;
  align-self: center;
}

.heading_rfso {
  grid-area: header_rfso;
  justify-self: center;
  align-self: center;
}
/*---------------Buttons styling --------------------*/
button {
  width: 25rem; /*this needs to be responsive, using % changes the box sizes when the focus is on the element*/
  height: 6rem;
  padding: auto 0px;
  border-radius: 1.5rem;
  border-style: hidden;
  /* border-bottom: 4px solid white;
  border-right: 4px solid white; */
  background-color: #0378a6;
  box-shadow: 0px 4px white;
  cursor: pointer;
}

button:hover {
  background-color: #03658c;
  transition: all 0.5s;
}
button:focus::before,
button:focus::after {
  content: 'âœ¨';
}

button:focus {
  outline: none;
}

button:active,
button:visited {
  background-color: #03658c;
  box-shadow: 0px 0px white;
  transition: all 1s;
}

.nozzle_ffso_button_1 {
  grid-area: nozzle_option_ffso_1;
}

.nozzle_ffso_button_2 {
  grid-area: nozzle_option_ffso_2;
}

.nozzle_ffso_button_3 {
  grid-area: nozzle_option_ffso_3;
}

.nozzle_ffso_button_4 {
  grid-area: nozzle_option_ffso_4;
}

.nozzle_ffso_button_5 {
  grid-area: nozzle_option_ffso_5;
}
.nozzle_ffso_button_6 {
  grid-area: nozzle_option_ffso_6;
}
.nozzle_ffso_button_7 {
  grid-area: nozzle_option_ffso_7;
}
.nozzle_ffso_button_8 {
  grid-area: nozzle_option_ffso_8;
}
.nozzle_ffso_button_9 {
  grid-area: nozzle_option_ffso_9;
}

.nozzle_rfso_button_1 {
  grid-area: nozzle_option_rfso_1;
}

.nozzle_rfso_button_2 {
  grid-area: nozzle_option_rfso_2;
}

.nozzle_rfso_button_3 {
  grid-area: nozzle_option_rfso_3;
}

.nozzle_rfso_button_4 {
  grid-area: nozzle_option_rfso_4;
}

.nozzle_rfso_button_5 {
  grid-area: nozzle_option_rfso_5;
}
.nozzle_rfso_button_6 {
  grid-area: nozzle_option_rfso_6;
}
.nozzle_rfso_button_7 {
  grid-area: nozzle_option_rfso_7;
}
.nozzle_rfso_button_8 {
  grid-area: nozzle_option_rfso_8;
}
.nozzle_rfso_button_9 {
  grid-area: nozzle_option_rfso_9;
}

/*---------------parts list grid --------------------*/
.parts_list_container {
  min-height: 20rem;
  width: 90vw;
  display: grid;
  grid-template-columns: 5% 20% 5% auto 5%; /*5 columns*/
  grid-auto-rows: 1.8rem;
  grid-template-areas:
    'item_order part_number qty description paint'
    'item_1 item_2 item_3 item_4 item_5';
  grid-auto-flow: row;

  column-gap: 10px;
  row-gap: 10px;
  /* display: flex;
  flex-direction: row; */
  align-items: stretch;
  justify-content: stretch;
  margin: 20px 0px;
  padding: 15px 100px;
  border: 3px solid gray;
  background-color: #733702;
}

.header_item_1,
.header_item_2,
.header_item_3,
.header_item_4,
.header_item_5 {
  justify-self: center;
  align-self: center;
  font-size: 25px;
  color: white;
}

.header_item_1 {
  grid-area: item_order;
}
.header_item_2 {
  grid-area: part_number;
}
.header_item_3 {
  grid-area: qty;
}
.header_item_4 {
  grid-area: description;
}

.header_item_5 {
  grid-area: paint;
}

.items {
  justify-self: center;
  align-self: center;
  font-size: 1.8rem;
  color: black;
}

/*---------------nozzle check box--------------------*/

.int_ext_checkbox_container {
  display: flex;
  justify-content: center;
  align-items: center;
  grid-area: options_1;
  margin-bottom: 1rem;
  color: #888;
}

.toggle-on-JS {
  color: yellow;
  text-shadow: 1px 5px 10px chartreuse;
}

.int_ext_checkbox_container::before {
  content: 'External';
}

.int_ext_checkbox_container::before,
.int_ext_checkbox_container::after {
  font-size: 1.5rem;
  font-weight: 500;
  display: inline-block;
  width: 9rem;
  /* height: 100%; */
  text-align: center;
  /* color: yellow; */
  /* text-shadow: 1px 5px 10px chartreuse; */
}

.int_ext_checkbox_container::after {
  content: 'Internal';
}

.int_ext_checkbox {
  font-size: 0.5rem; /*driving the size of the class, before and after*/
  appearance: none;
  width: 18em;
  height: 9em;
  background: #ddd;
  position: relative;
  cursor: pointer;
  /* transition: background-color 0.1s 0.3s ease-out; */
  box-shadow: 0px 0px 3px 5px #ddd;
}

.int_ext_checkbox:focus {
  outline: #000 solid 3px;
}

.int_ext_checkbox::before {
  position: absolute;
  content: '';
  height: 8em;
  width: 9em;
  top: 0.35em;
  border-left: 1.75em solid #000;
  z-index: 1;
  /* background-image: linear-gradient(
      to right,
      transparent 0.75rem,
      transparent 0.75rem
    ),
    linear-gradient(45deg, blue 7rem, blue 7rem, transparent 7rem); */
  /* margin-left: 0.5rem; */
  transition: transform 0.45s ease-out;
}

.int_ext_checkbox::after {
  position: absolute;
  content: '';
  width: 9em;
  height: 9em;
  /* border: 0.75rem solid red; */
  /* border-left: 2.25rem solid #000; */
  border-right: 1em solid #000;
  /* background-repeat: no-repeat; */
  background-image: linear-gradient(
    to bottom,
    transparent 1.5em,
    #000 1.5em,
    #000 2em,
    #fff 4.5em,
    #000 7.5em,
    transparent 7.5em
  );
  transition: transform 0.45s ease-out;
}

.int_ext_checkbox:checked {
  /* background: #0ebeff; */
  /* transition: background-color 0.2s 0.3s ease-out; */
}

.int_ext_checkbox:checked::before {
  content: '';
  transform: translateX(100%) rotateY(180deg);
}

.int_ext_checkbox:checked::after {
  content: '';
  transform: translateX(100%) rotateY(180deg);
}

.test_box {
  font-family: 'Recursive', sans-serif;
  font-size: 3rem;
  margin-top: 2rem;
  background-color: #8b8b8b;
  width: 12rem;
  height: 6rem;
  color: blue;
}

.test_box::before {
  position: absolute;
  content: '';
  background-repeat: no-repeat;
  background-size: 50% 50%, 100% 100%;
  background-position: 6rem 0rem, 0rem 0rem;
  background-image: linear-gradient(to right, blue 50%, red 50%),
    linear-gradient(to right, yellow 50%, green 50%);
  width: 12rem;
  height: 6rem;
}
/* #888 */

/* .test_div {
  font-size: 2rem;
  appearance: none;
  width: 6rem;
  height: 3rem;
  background: #ddd;WS
  position: relative;
  cursor: pointer;
}

.test_div::after {
  position: absolute;
  content: '';
  width: 1rem;
  height: 3rem;
  left: 2rem;
  /* background: linear-gradient(#888 25%, #000), linear-gradient(red, blue); */
/* background-repeat: no-repeat, no-repeat;
  background-image: linear-gradient(to top, #888 25%, #000),
    linear-gradient(to bottom, red, blue);
  background-size: 100% 50%, 50% 50%;
} */

/* ---------------checkbox --------------------

input[type='checkbox'].inner_outer {
  font-size: 2rem;
  appearance: none;
  width: 3.5em;
  height: 1.5em;
  background: #ddd;
  border-radius: 3em;
  position: relative;
  cursor: pointer;
  outline: none;
  transition: all 0.2s ease-in-out;
}

input[type='checkbox'].inner_outer:checked {
  background: #0ebeff;
}

input[type='checkbox'].inner_outer:after {
  position: absolute;
  content: '';
  width: 1.5em;
  height: 1.5em;
  border-radius: 50%;
  background: #fff;
  box-shadow: 0 0 0.25em rgba(0, 0, 0, 0.3);
  transform: scale(0.7);
  left: 0;
  transition: all 0.2s ease-in-out;
}

input[type='checkbox'].inner_outer:checked:after {
  left: calc(100% - 1.5em);
} */

/*
flip toggle switch - https://codepen.io/rgg/pen/waEYye
in SCSS

$base-font: 'Open Sans', sans-serif;

$side: 3em;
$duration: 1s;
$factor: 1.618;

$red: #cc0966;
$blue: #5EB9CC;
$green: #59c000;

$ok-color: $blue;
$ko-color: $red;

pure-toggle {
    cursor: pointer;
    font-size: 1.5em;
    width: $side * 2;
    height: $side;
    display: inline-block;
    position: relative;
    background: white;
    text-align: left;
    line-height: $side;
    @include box-sizing(border-box);
    @include perspective(300px);
    &:before {
        width: $side;
        height: $side;
        position: absolute;
        right: 0;
        top: 0;
        background-color: #f5f5f5;
        display: inline-block;
        text-align: center;
        font-family: 'FontAwesome', sans-serif;
        content: "Â·Â·Â·";
        color: #ffffff;
        @include transition(all $duration ease-in-out);
        @include transform-origin(0%, 50%);
        /*@include box-shadow(0.1em 0 0.2em rgba(0,0,0,0.3));*/
/*}
*/
